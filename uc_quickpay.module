<?php 

/**
 * @file
 * Integrates various Paytrek with Ubercart.
 *
 * You should turn on Instant Payment Notifications in your Paytrek profile and
 * set the IPN URL to http://{yoursite.com}/uc_Paytrek/ipn. See
 * https://drupal.org/node/1311198 for further information.
 */
use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\Xss;
use Drupal\uc_order\Entity\Order;
use Drupal\uc_order\OrderInterface;
use Drupal\uc_payment\Entity\PaymentMethod;
use Drupal\uc_payment\Entity\PaymentReceipt;
use Drupal\uc_payment\ExpressPaymentMethodPluginInterface;
use Drupal\uc_payment\Form\OffsitePaymentMethodForm;
use Drupal\uc_payment\OffsitePaymentMethodPluginInterface;
use Drupal\uc_payment\PaymentReceiptInterface;
/**
 * Implements hook_help().
 */
// function uc_paytrek_help($route_name, RouteMatchInterface $route_match) {
//     
// }

/**
 * Implements hook_uc_payment_gateway().
 */
// function uc_paytrek_uc_payment_gateway() {
//   	if (!\Drupal::moduleHandler()->moduleExists('uc_credit')) {
//     	drupal_set_message(t('You must <a href=":modules">enable the Credit Card module</a> to use Paytrek Payment Gateway.', [':modules' => Url::fromRoute('system.modules_list', [], ['fragment' => 'edit-modules-ubercart-payment'])->toString()]), 'warning');
// 	    return;
//   	}

//   	$gateways['paytrek_gateway'] = array(
//     	'title' => t('Paytrek Payment Gateway'),
//     	'description' => t('Process credit card payments using Website Paytrek.'),
//     	'settings' => 'uc_paytrek_settings_form',
//     	'credit' => 'uc_paytrek_charge',
//     	'credit_txn_types' => array(UC_CREDIT_AUTH_ONLY, UC_CREDIT_PRIOR_AUTH_CAPTURE, UC_CREDIT_AUTH_CAPTURE),
//   	);
// 	return $gateways;
// }

/**
 * Check that all API keys are configured.
 *
 * @return bool
 *   TRUE if all 4 keys have a value.
 */

define('QUICKPAY_VERSION', 'v10');


// function uc_quickpay_form_uc_cart_checkout_form_alter(&$form, FormStateInterface $form_state) {
//   // $form['#attached']['library'][] = 'uc_quickpay/uc_quickpay';
// }
// function uc_quickpay_form_uc_cart_checkout_review_form_alter(&$form, FormStateInterface $form_state) {
//     global $base_url;
//     /** @var \Drupal\uc_payment\PaymentMethodPluginInterface $plugin */
//     $tokenn = \Drupal::service('user.private_tempstore')->get('uc_quickpay')->get('uc_quickpay_token');
//     $form['#action'] = 'https://payment.quickpay.net';
//     //$payment_method = uc_payment_method_list();
//     $order = $form_state->get('uc_order');
//     $plugin = \Drupal::service('plugin.manager.uc_payment.method')->createFromOrder($order);
//     $Adminconfiguration = $plugin->getConfiguration();
//     if($plugin->getPluginId() == 'quickpay_gateway'){
        
//         // $form['version'] = array(
//         //     '#type' => 'hidden',
//         //     '#default_value' => QUICKPAY_VERSION,
//         //     '#attributes' => array(
//         //         'id' => 'order_review_version',
//         //     ),
//         // );

//         // $form['merchant_id'] = array(
//         //     '#type' => 'hidden',
//         //     '#default_value' => $Adminconfiguration['api']['merchant_id'],
//         //     '#attributes' => array(
//         //         'id' => 'order_review_merchant_id',
//         //     ),
//         // );

//         // $form['agreement_id'] = array(
//         //     '#type' => 'hidden',
//         //     '#default_value' => $Adminconfiguration['api']['agreement_id'],
//         //     '#attributes' => array(
//         //         'id' => 'order_review_agreement_id',
//         //     ),
//         // );

//         // $form['order_id'] = array(
//         //     '#type' => 'hidden',
//         //     '#default_value' => $order->id(),
//         //     '#attributes' => array(
//         //         'id' => 'order_review_order_id',
//         //     ),
//         // );

//         // $form['amount'] = array(
//         //     '#type' => 'hidden',
//         //     '#default_value' => $order->getTotal(),
//         //     '#attributes' => array(
//         //         'id' => 'order_review_amount',
//         //     ),
//         // );
//         // if($Adminconfiguration['currency'] == $order->getCurrency()){
//         //     $form['currency'] = array(
//         //         '#type' => 'hidden',
//         //         '#default_value' => $order->getCurrency(),
//         //         '#attributes' => array(
//         //             'id' => 'order_review_currency',
//         //         ),
//         //     );
//         // }

//         // if($Adminconfiguration['callbacks']['continue_url']){
//         //     $form['continueurl'] = array(
//         //         '#type' => 'hidden',
//         //         '#default_value' => $base_url . '/'. $Adminconfiguration['callbacks']['continue_url'],
//         //         '#attributes' => array(
//         //             'id' => 'order_review_continue_url',
//         //         ),
//         //     );
//         // }

//         // if($Adminconfiguration['callbacks']['cancel_url']){
//         //     $form['cancel_url'] = array(
//         //         '#type' => 'hidden',
//         //         '#default_value' => $base_url . '/'. $Adminconfiguration['callbacks']['cancel_url'],
//         //         '#attributes' => array(
//         //             'id' => 'order_review_callbackurl',
//         //         ),
//         //     );
//         // }

//         // $form['checksum'] = array(
//         //     '#type' => 'hidden',
//         //     '#default_value' => $tokenn,
//         //     '#attributes' => array(
//         //         'id' => 'order_review_checksum',
//         //     ),
//         // );

//         $form = \Drupal::formBuilder()->getForm('Drupal\uc_quickpay\Form\QuickPayHiddenReview');
//         //var_dump($order->getCurrency());
//         //var_dump($order->getTotal());
//         //var_dump($order->getEmail());
//         //var_dump($order->getProductCount());
//         //var_dump($order->getAddress('billing')->first_name);
//         //var_dump($order->getAddress('billing')->last_name);
//         //var_dump($order->getAddress('billing')->company);
//         //var_dump($order->getAddress('billing')->street1);
//         //var_dump($order->getAddress('billing')->city);
//         //var_dump($order->getAddress('billing')->zone);
//         //var_dump($order->getAddress('billing')->country);
//         //var_dump($order->getAddress('billing')->phone);
//         //var_dump($order->getAddress('billing')->email);

//         //var_dump($order->id());

//         // var_dump($order->getCurrency());
//         // var_dump($order->getCurrency());
//         //var_dump($order);
//         //var_dump();
//         // var_dump($Adminconfiguration['merchant_id']);
//         // var_dump($Adminconfiguration['private_key']);
//         // var_dump($Adminconfiguration['agreement_id']);
//         // var_dump($Adminconfiguration['api_key']);
//         // var_dump($Adminconfiguration['language']);
//         // var_dump($Adminconfiguration['currency']);
//         // var_dump($Adminconfiguration['continue_url']);
//         // var_dump($Adminconfiguration['cancel_url']);
       
//     }
    
// }
function _uc_quickpay_check_api_keys($configuration) {
  return $configuration['merchant_id'] &&
    $configuration['private_key'] &&
    $configuration['agreement_id'] &&
    $configuration['api_key'] &&
    $configuration['language'] &&
    $configuration['currency'];
}

/**
 * Implements hook_uc_checkout_complete()
 *
 * Saves QuickPay customer_id into the user->data object
 *
 * @param $order
 * @param $account
 */
function uc_quickpay_uc_checkout_complete($order, $account) {

  if ($order->payment_method == "credit") {
    // Pull the QuickPay customer ID from the temp storage.
    // It got there in uc_QuickPay_checkout_form_customsubmit()
    // This is only really necessary for uc_recurring
    //$QuickPay_customer_id = \Drupal::service('user.private_tempstore')->get('uc_paytrek')->get('uc_paytrek_customer_id');

    //\Drupal::getContainer('user.data')->set('uc_paytrek', $account->id(), 'uc_paytrek_customer_id', $QuickPay_customer_id);
  }
}
